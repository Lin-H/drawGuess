<!DOCTYPE html>
<html>
<head>
    <title>Welcome to drawGuess</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <div class="buttons">
        <button onclick="draw.clear()">清除</button>
        <button onclick="draw.setStroke('blue')">蓝色</button>
        <button onclick="draw.setStroke('red')">红色</button>
        <button onclick="draw.setStroke('green')">绿色</button>
    </div>
    <div id="paint">
        <canvas id="canvas" height="600" width="600"></canvas>
    </div>
<script>
var ws = new WebSocket('ws://localhost:3000')
ws.onmessage = function(event) {
    console.log(`receive ${event.data}`)
}
ws.onopen = function(event) {
    console.log('connect')
    ws.send('from client')
}

var draw = new Draw(ws)

function Draw() {
    var canvas = this.canvas = document.getElementById('canvas')
    var paint = document.getElementById('paint');
    var offsetX = canvas.offsetLeft
    var offsetY = canvas.offsetTop
    var ctx = this.ctx = canvas.getContext('2d')
    var tmpCanvas = document.createElement('canvas'); // 临时画布
    tmpCanvas.className = 'tmpCanvas'
    tmpCanvas.width = canvas.width
    tmpCanvas.height = canvas.height
    paint.appendChild(tmpCanvas);
    var tmpCtx = this.tmpCtx = tmpCanvas.getContext('2d');
    var ppts = []; // 画笔轨迹
    var mouse = {x: 0, y: 0}; // 当前画笔点
    tmpCtx.strokeStyle = '#f00'
    tmpCtx.lineWidth = 2.0
    tmpCtx.lineJoin = 'round';
    tmpCtx.lineCap = 'round';
    tmpCanvas.addEventListener('mousedown', function(e) {
		tmpCanvas.addEventListener('mousemove', startDraw, false);
		mouse.x = typeof e.offsetX !== 'undefined' ? e.offsetX : e.layerX;
		mouse.y = typeof e.offsetY !== 'undefined' ? e.offsetY : e.layerY;
		ppts.push({x: mouse.x, y: mouse.y});
		startDraw();
	}, false);

	tmpCanvas.addEventListener('mouseup', function() {
		tmpCanvas.removeEventListener('mousemove', startDraw, false);
		// Writing down to real canvas now
		ctx.drawImage(tmpCanvas, 0, 0);
		// Clearing tmp canvas
		tmpCtx.clearRect(0, 0, tmpCanvas.width, tmpCanvas.height);
		// 清除轨迹
		ppts = [];
	}, false);

    tmpCanvas.addEventListener('mousemove', function(e) {
		mouse.x = typeof e.offsetX !== 'undefined' ? e.offsetX : e.layerX;
		mouse.y = typeof e.offsetY !== 'undefined' ? e.offsetY : e.layerY;
	}, false);
    function startDraw(e) {
        // Saving all the points in an array
		ppts.push({x: mouse.x, y: mouse.y});
		if (ppts.length < 3) {
			var b = ppts[0];
			tmpCtx.beginPath();
			tmpCtx.arc(b.x, b.y, tmpCtx.lineWidth / 2, 0, Math.PI * 2, !0);
			tmpCtx.fill();
			tmpCtx.closePath();
			return;
		}
		// Tmp canvas is always cleared up before drawing.
		tmpCtx.clearRect(0, 0, tmpCanvas.width, tmpCanvas.height);
		tmpCtx.beginPath();
		tmpCtx.moveTo(ppts[0].x, ppts[0].y);
		for (var i = 1; i < ppts.length - 2; i++) {
			var c = (ppts[i].x + ppts[i + 1].x) / 2;
			var d = (ppts[i].y + ppts[i + 1].y) / 2;
			tmpCtx.quadraticCurveTo(ppts[i].x, ppts[i].y, c, d);
		}
		// last 2 points
		tmpCtx.quadraticCurveTo(
			ppts[i].x,
			ppts[i].y,
			ppts[i + 1].x,
			ppts[i + 1].y
		);
		tmpCtx.stroke();
    }
}
Draw.prototype.setStroke = function(color) {
    this.tmpCtx.strokeStyle = color
}
Draw.prototype.clear = function() {
    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)
}

</script>
</body>
</html>